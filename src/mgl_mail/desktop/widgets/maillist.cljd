(ns mgl-mail.desktop.widgets.maillist
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:enough_mail/enough_mail.dart" :as em]
   ["package:flutter_context_menu/flutter_context_menu.dart" :as context-menu]
   ["package:mongol/mongol.dart" :as mgl]
   [cljd.flutter :as f]
   [mgl-mail.desktop.widgets.menu :as menu]
   [mgl-mail.states.global :refer [state]]))
   
(defn list-item [^em/MimeMessage item]
  (f/widget
   :get [m/Navigator]
   :let [subject (if (empty? (.decodeSubject item))
                   "No Subject"
                   (.decodeSubject item))]
   (context-menu/ContextMenuRegion
    .contextMenu (menu/mail-item-menu item)
    .onItemSelected (partial menu/mail-item-selected-fn item))
   (mgl/MongolListTile
    .title (m/Padding
            .padding (m.EdgeInsets/only .top 8.0)
            .child (mgl/MongolText subject))
    .onTap (fn []
             (swap! state assoc :mail item)
             (.pushNamed navigator "/mail_detail")
             nil))))

(defn list-view
  []
  (f/widget
   :watch [mail-list- (f/$ (some->> (f/<! state) :mail-list (into [])))]
   (if (empty? mail-list-)
     (m/Center
      .child (m/Column
              .children [(mgl/MongolText "empty.")]))
     (f/widget
      :let [^#/(List em/MimeMessage?)
            mail-list mail-list-]
      (m.ListView/builder
       .scrollDirection m.Axis/horizontal
       .itemCount (count mail-list)
       .itemBuilder (f/build [idx]
                             (let [item (get mail-list idx)]
                               (list-item item))))))))